plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.code-disaster.steamworks4j:steamworks4j:1.9.0"
    implementation "com.miglayout:miglayout-swing:11.0"
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'javax.activation', name: 'javax.activation-api', version: '1.2.0'
    runtimeOnly files('Data')
}

application {
    mainClass = 'de.hsb.ismi.jbs.start.JBattleships.main'
}

// Simply remove distZip and distTar as we have our own zip/tar task!
project.gradle.startParameter.excludedTaskNames.addAll('distZip', 'distTar')

task copyData(type: Copy) {
    from('Data')
    into(project.buildDir.toString() + '/libs/Data')
}

task copySteamData(type: Copy) {
    from('steam_appid.txt')
    into(project.buildDir.toString() + '/libs')
}

task buildData {
    dependsOn copyData
    dependsOn copySteamData
}

task buildAll {
    dependsOn build
    dependsOn buildData
    tasks.findByName('buildData').mustRunAfter 'build'
}

task rebuildAll {
    dependsOn clean
    dependsOn buildAll
    tasks.findByName('buildAll').mustRunAfter 'clean'
}

task cleanAssets(type: Delete) {
    delete 'build/libs/Data'
    delete 'build/libs/steam_appid.txt'
    delete 'build/libs/JBattleships.jar'
}

task cleanDist(type: Delete) {
    delete 'build/distributions/'
}

task zip(type: Zip) {
    dependsOn buildAll
    from('build/libs')
    into('distribution')
    archiveFileName = 'JBattleships-v' + projectVersion + '.zip'
}

task tar(type: Tar) {
    dependsOn buildAll
    from('build/libs')
    into('/')
    archiveFileName = 'JBattleships-v' + projectVersion + '.tar'
}
